<?xml version='1.0' encoding='UTF-8'?>
<workflow xmlns="http://vmware.com/vco/workflow" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:schemaLocation="http://vmware.com/vco/workflow http://vmware.com/vco/workflow/Workflow-v4.xsd" root-name="item1" object-name="workflow:name=generic" id="0686fc1b-c237-4ac5-9d7e-448245bbc90e" version="0.0.1" api-version="6.0.0" allowed-operations="evf" editor-version="2.0" restartMode="1" resumeFromFailedMode="0">
  <display-name><![CDATA[Backup of Get Network Id]]></display-name>
  <position y="50.0" x="80.0"/>
  <input>
    <param name="networkName" type="string"/>
  </input>
  <output>
    <param name="networkId" type="string">
      <description><![CDATA[Network Id for specified network]]></description>
    </param>
  </output>
  <attrib name="bearerToken" type="string" read-only="false">
    <value encoded="n"><![CDATA[]]></value>
  </attrib>
  <attrib name="cspRestHost" type="REST:RESTHost" read-only="false">
    <value encoded="n"><![CDATA[dunes://service.dunes.ch/CustomSDKObject?id='fad31d73-bc3b-4b64-aca8-ff1f8abfeed6'&dunesName='REST:RESTHost']]></value>
  </attrib>
  <workflow-item name="item0" type="end" end-mode="0">
    <in-binding/>
    <position y="50.0" x="440.0"/>
  </workflow-item>
  <workflow-item name="item1" out-name="item2" type="link" linked-workflow-id="1d1e2280-4858-4b53-aba3-85663ee809a8">
    <display-name><![CDATA[Get bearer token]]></display-name>
    <in-binding/>
    <out-binding>
      <bind name="bearerToken" type="string" export-name="bearerToken"/>
    </out-binding>
    <description><![CDATA[ ]]></description>
    <position y="60.0" x="160.0"/>
  </workflow-item>
  <workflow-item name="item2" out-name="item0" type="task">
    <display-name><![CDATA[Get details]]></display-name>
    <script encoded="false"><![CDATA[var netId = null;

try {
    var url = "/iaas/api/fabric-networks/";
    var request = cspRestHost.createRequest("GET", url);

    request.setHeader("Authorization", "Bearer " + bearerToken);
    request.setHeader("Content-Type", "application/json");
    request.setHeader("Cache-Control", "no-cache");

    var requestResponse = request.execute();

    if (requestResponse.statusCode != 200 && requestResponse.statusCode != 201 && requestResponse.statusCode != 202) {
        System.log("Deployment details request has returned an error status code: " + requestResponse.statusCode);
        throw ("Error: " + requestResponse.statusCode);
    }

    System.debug(requestResponse.contentAsString);

    var netPayload = JSON.parse(requestResponse.contentAsString);

    for (i=0; i < netPayload.content.length; i++) {

        if (netPayload.content[i].name.toLowerCase() == networkName.toLowerCase()) {
            System.log ("Network Id found: " + netPayload.content[i].id);
            netId = netPayload.content[i].id;
            break;
        }
    }

}
catch(e)
{
    System.log("Exception was caught: " + e);
    throw e;
}

if (netId == null) {
    throw ("Error: No network ID found for network: " + networkName);
} else {
    networkId = netId;    
}]]></script>
    <in-binding>
      <bind name="bearerToken" type="string" export-name="bearerToken"/>
      <bind name="cspRestHost" type="REST:RESTHost" export-name="cspRestHost"/>
      <bind name="networkName" type="string" export-name="networkName"/>
    </in-binding>
    <out-binding>
      <bind name="networkId" type="string" export-name="networkId"/>
    </out-binding>
    <description><![CDATA[Simple task with custom script capability.]]></description>
    <position y="60.0" x="281.0"/>
  </workflow-item>
  <presentation/>
</workflow>